{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FartunPC\\\\Desktop\\\\Dictionary-app\\\\src\\\\Results.js\";\nimport React from \"react\";\nimport Meaning from \"./Meaning\";\nimport Phonetic from \"./Phonetic\";\nimport \"./Results\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Results(props) {\n  if (props.results) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Results\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: props.results.word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 9\n        }, this), props.results.phonetics.map(function (phonetic, index) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Phonetic, {\n              phonetic: phonetic\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 7\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 7\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }, this), props.results.meanings.map(function (meaning, index) {\n        return /*#__PURE__*/_jsxDEV(\"section\", {\n          children: /*#__PURE__*/_jsxDEV(Meaning, {\n            meaning: meaning\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 9\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 7\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this);\n  } else {\n    return null;\n  }\n}\n_c = Results;\n\nvar _c;\n\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","Meaning","Phonetic","Results","props","results","word","phonetics","map","phonetic","index","meanings","meaning"],"sources":["C:/Users/FartunPC/Desktop/Dictionary-app/src/Results.js"],"sourcesContent":["import React from \"react\";\r\nimport Meaning from \"./Meaning\";\r\nimport Phonetic from \"./Phonetic\"\r\nimport \"./Results\"\r\n\r\nexport default function Results(props){\r\n      if  (props.results) { \r\n    return (\r\n    <div className=\"Results\">\r\n      <section>\r\n        <h2>{ props.results.word}</h2>\r\n        {props.results.phonetics.map(function (phonetic, index) {\r\n     return (\r\n      <div key={index}>\r\n      <Phonetic  phonetic={phonetic} />\r\n      </div>\r\n     );\r\n        })}\r\n        </section>\r\n {props.results.meanings.map(function(meaning, index) {\r\n      return (\r\n      <section key={index}> \r\n        <Meaning meaning ={meaning}/>\r\n        </section>\r\n      );\r\n        })}\r\n    </div>\r\n    );\r\n     } else{\r\n        return null;\r\n     }\r\n}"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,WAAP;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAuB;EAChC,IAAKA,KAAK,CAACC,OAAX,EAAoB;IACtB,oBACA;MAAK,SAAS,EAAC,SAAf;MAAA,wBACE;QAAA,wBACE;UAAA,UAAMD,KAAK,CAACC,OAAN,CAAcC;QAApB;UAAA;UAAA;UAAA;QAAA,QADF,EAEGF,KAAK,CAACC,OAAN,CAAcE,SAAd,CAAwBC,GAAxB,CAA4B,UAAUC,QAAV,EAAoBC,KAApB,EAA2B;UAC3D,oBACC;YAAA,uBACA,QAAC,QAAD;cAAW,QAAQ,EAAED;YAArB;cAAA;cAAA;cAAA;YAAA;UADA,GAAUC,KAAV;YAAA;YAAA;YAAA;UAAA,QADD;QAKI,CANA,CAFH;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,EAWFN,KAAK,CAACC,OAAN,CAAcM,QAAd,CAAuBH,GAAvB,CAA2B,UAASI,OAAT,EAAkBF,KAAlB,EAAyB;QAChD,oBACA;UAAA,uBACE,QAAC,OAAD;YAAS,OAAO,EAAGE;UAAnB;YAAA;YAAA;YAAA;UAAA;QADF,GAAcF,KAAd;UAAA;UAAA;UAAA;QAAA,QADA;MAKG,CANP,CAXE;IAAA;MAAA;MAAA;MAAA;IAAA,QADA;EAqBE,CAtBA,MAsBK;IACH,OAAO,IAAP;EACF;AACL;KA1BuBP,O"},"metadata":{},"sourceType":"module"}